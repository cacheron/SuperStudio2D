#######################################################################

  ____                        ____  _             _ _      ____     _ 
 / ___| _   _ _ __   ___ _ __/ ___|| |_ _   _  __| (_) ___|___ \ __| |
 \___ \| | | | '_ \ / _ \ '__\___ \| __| | | |/ _` | |/ _ \ __) / _` |
  ___) | |_| | |_) |  __/ |   ___) | |_| |_| | (_| | | (_) / __/ (_| |
 |____/ \__,_| .__/ \___|_|  |____/ \__|\__,_|\__,_|_|\___/_____\__,_|
             |_|                                                                                                         
 
              C++ Engine developed for 2D game design
              by Chaz Acheronti and Robert Steiminger

#######################################################################
    The goal of this engine is to easily develop 2D games 
    that rely on top-down perspectives and top-down rendering.

Current Design Needs:
Part 5: AI Decision Making
○ Since our AI is a flight attendant, we just need some basic functionallity
○ Its first behavior is to walk back and forth between two points
    ○ If something walks into its range of vision, then trigger the follow behavior.
○ The second behavior is to follow the player to get within range (our old follow method)
○ The third behavior is to throw a peanut at the player. It can only do this when it has already found the player
    ○ Must be a random decision between follow and throw. Make the decision every X amount of seconds
