#######################################################################

  ____                        ____  _             _ _      ____     _ 
 / ___| _   _ _ __   ___ _ __/ ___|| |_ _   _  __| (_) ___|___ \ __| |
 \___ \| | | | '_ \ / _ \ '__\___ \| __| | | |/ _` | |/ _ \ __) / _` |
  ___) | |_| | |_) |  __/ |   ___) | |_| |_| | (_| | | (_) / __/ (_| |
 |____/ \__,_| .__/ \___|_|  |____/ \__|\__,_|\__,_|_|\___/_____\__,_|
             |_|                                                                                                         
 
              C++ Engine developed for 2D game design
              by Chaz Acheronti and Robert Steiminger

#######################################################################
    The goal of this engine is to easily develop 2D games 
    that rely on top-down perspectives and top-down rendering.

Current Design Needs:
Part 5: AI Decision Making
○ Its first behavior is to walk back and forth between a vector of points
    ○ (BUG: walks faster in reverse)
    ○ (BUG: when adding more than two, he starts repeating a few points and missing the last (change looping conditions))
    ○ Player is currently discovered if they walk in range. This is temporary until we do some math on detection angles
    
○ Second behavior, chase, is a dumb follow. He just goes straight to the player with no pathing
    ○ When the player is no longer seen, the AI goes back to his patrol route. This step NEEDS pathing to work correctly
        or else he gets snagged

○ The third behavior is to run away from the player. This could be better with pathing, but for now he just runs the opposite direction.
 
○ The fourth behavior is to throw a peanut at the player. It can only do this when it has already found the player
